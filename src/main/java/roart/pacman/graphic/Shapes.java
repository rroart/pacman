package roart.pacman.graphic;

public interface Shapes {

byte PACMAN0_BITS[]=    {(byte) 0x3c,(byte) 0x7e,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0x7e,(byte) 0x3c};
byte PACMANRIGHT_BITS[]= {(byte) 0x3c,(byte) 0x68,(byte) 0xf0,(byte) 0xe0,(byte) 0xe0,(byte) 0xf0,(byte) 0x78,(byte) 0x3c};
byte PACMANLEFT_BITS[]={(byte) 0x3c,(byte) 0x16,(byte) 0x0f,(byte) 0x07,(byte) 0x07,(byte) 0x0f,(byte) 0x1e,(byte) 0x3c};
byte PACMANUP_BITS[]=   {(byte) 0x00,(byte) 0x00,(byte) 0x81,(byte) 0xc3,(byte) 0xa7,(byte) 0xff,(byte) 0x7e,(byte) 0x3c};
byte PACMANDOWN_BITS[]= {(byte) 0x3c,(byte) 0x7e,(byte) 0xff,(byte) 0xa7,(byte) 0xc3,(byte) 0x81,(byte) 0x00,(byte) 0x00};

byte VERTWALL_BITS[]={(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c};

byte HORIWALL_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0x00,(byte) 0x00};

byte BLANK_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00};

byte CROSS_BITS[]={(byte) 0x3c,(byte) 0x3c,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0x3c,(byte) 0x3c};

byte FOOD_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x18,(byte) 0x3c,(byte) 0x3c,(byte) 0x18,(byte) 0x00,(byte) 0x00};

byte SUPERFOOD_BITS[]={(byte) 0x00,(byte) 0x3c,(byte) 0x7e,(byte) 0x7e,(byte) 0x7e,(byte) 0x7e,(byte) 0x3c,(byte) 0x00};

byte GHOST_BITS[]={(byte) 0x18,(byte) 0x7e,(byte) 0xff,(byte) 0xdb,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xa5};

byte CORNER1_BITS[]={(byte) 0x3c,(byte) 0x3e,(byte) 0x3f,(byte) 0x3f,(byte) 0x3f,(byte) 0x1f,(byte) 0x00,(byte) 0x00};

byte CORNER4_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x1f,(byte) 0x3f,(byte) 0x3f,(byte) 0x3f,(byte) 0x3e,(byte) 0x3c};

byte CORNER3_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0xf8,(byte) 0xfc,(byte) 0xfc,(byte) 0xfc,(byte) 0x7c,(byte) 0x3c};

byte CORNER2_BITS[]={(byte) 0x3c,(byte) 0x7c,(byte) 0xfc,(byte) 0xfc,(byte) 0xfc,(byte) 0xf8,(byte) 0x00,(byte) 0x00};

byte SPECWALL_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0xff,(byte) 0x00,(byte) 0x00,(byte) 0xff,(byte) 0x00,(byte) 0x00};

byte BONUSPOINT_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x24,(byte) 0x18,(byte) 0x18,(byte) 0x24,(byte) 0x00,(byte) 0x00};

byte BONUSLIFE_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x1c,(byte) 0x38,(byte) 0x38,(byte) 0x1c,(byte) 0x00,(byte) 0x00};

byte E0_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0xf8,(byte) 0xfc,(byte) 0xfc,(byte) 0xf8,(byte) 0x00,(byte) 0x00};

byte E90_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x18,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c};

byte E180_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0x1f,(byte) 0x3f,(byte) 0x3f,(byte) 0x1f,(byte) 0x00,(byte) 0x00};

byte E270_BITS[]={(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x3c,(byte) 0x18,(byte) 0x00,(byte) 0x00};

byte T0_BITS[]={(byte) 0x00,(byte) 0x00,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0x7e,(byte) 0x3c};

byte T90_BITS[]={(byte) 0x3c,(byte) 0x3e,(byte) 0x3f,(byte) 0x3f,(byte) 0x3f,(byte) 0x3f,(byte) 0x3e,(byte) 0x3c};

byte T180_BITS[]={(byte) 0x3c,(byte) 0x7e,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0xff,(byte) 0x00,(byte) 0x00};

byte T270_BITS[]={(byte) 0x3c,(byte) 0x7c,(byte) 0xfc,(byte) 0xfc,(byte) 0xfc,(byte) 0xfc,(byte) 0x7c,(byte) 0x3c};

// #elif defined VTX			//vt??? unix only
// byte pacman0_bits[]={'P'};    
// byte pacmanleft_bits[]={'P'}; 
// byte pacmanright_bits[]={'P'};
// byte pacmanup_bits[]=   {'P'};
// byte pacmandown_bits[]= {'P'};

// byte vertwall_bits[]={'|'};

// byte horiwall_bits[]={'-'};

// byte blank_bits[]={' '};

// byte cross_bits[]={'+'};

// byte food_bits[]={'.'};

// byte superfood_bits[]={'o'};

// byte ghost_bits[]={'G'};

// byte corner2_bits[]={'X'};

// byte corner3_bits[]={'X'};

// byte corner4_bits[]={'X'};

// byte corner1_bits[]={'X'};

// byte specwall_bits[]={'_'};

// byte bonuspoint_bits[]={'?'};

// byte bonuslife_bits[]={'p'};

// byte e180_bits[]={'-'};

// byte e90_bits[]={'|'};

// byte e0_bits[]={'-'};

// byte e270_bits[]={'|'};

// byte t0_bits[]={'-'};

// byte t270_bits[]={'|'};

// byte t180_bits[]={'-'};

// byte t90_bits[]={'|'};
// #endif
   
   



}
